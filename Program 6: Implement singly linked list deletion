#include <stdio.h>
#include <stdlib.h>
struct Node {
    int data;
    struct Node* next;
};
struct Node* head = NULL; 
void createLinkedList(int value) {
    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
    newNode->data = value;
    newNode->next = NULL;
    head = newNode;
    printf("Linked list created with value %d\n", value);
}
void deleteFirst() {
    if (head == NULL) {
        printf("Linked list is empty\n");
        return;
    }
    struct Node* temp = head;
    head = head->next;
    printf("Deleted %d from the beginning\n", temp->data);
    free(temp);
}
void deleteSpecific(int value) {
    if (head == NULL) {
        printf("Linked list is empty\n");
        return;
    }

    if (head->data == value) {
        deleteFirst();
        return;
    }

    struct Node* temp = head;
    struct Node* prev = NULL;

    while (temp != NULL && temp->data != value) {
        prev = temp;
        temp = temp->next;
    }

    if (temp == NULL) {
        printf("Element %d not found\n", value);
        return;
    }

    prev->next = temp->next;
    printf("Deleted %d from the list\n", temp->data);
    free(temp);
}
void deleteLast() {
    if (head == NULL) {
        printf("Linked list is empty\n");
        return;
    }

    if (head->next == NULL) {
        printf("Deleted %d from the end\n", head->data);
        free(head);
        head = NULL;
        return;
    }

    struct Node* temp = head;
    struct Node* prev = NULL;

    while (temp->next != NULL) {
        prev = temp;
        temp = temp->next;
    }

    prev->next = NULL;
    printf("Deleted %d from the end\n", temp->data);
    free(temp);
}
void displayLinkedList() {
    if (head == NULL) {
        printf("Linked list is empty\n");
        return;
    }

    struct Node* temp = head;
    printf("Linked list: ");
    while (temp != NULL) {
        printf("%d ", temp->data);
        temp = temp->next;
    }
    printf("\n");
}

int main() {
    int choice, value;

    while (1) {
        printf("\n1. Create Linked List\n2. Delete First Element\n3. Delete Specific Element\n4. Delete Last Element\n5. Display Linked List\n6. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                printf("Enter value to create linked list: ");
                scanf("%d", &value);
                createLinkedList(value);
                break;
            case 2:
                deleteFirst();
                break;
            case 3:
                printf("Enter value to delete: ");
                scanf("%d", &value);
                deleteSpecific(value);
                break;
            case 4:
                deleteLast();
                break;
            case 5:
                displayLinkedList();
                break;
            case 6:
                exit(0);
            default:
                printf("Invalid choice!\n");
        }
    }

    return 0;
}

